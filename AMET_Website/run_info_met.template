### Indicate this as a MET database query ###
Met_query <- "T"
TIME_FORMAT <- "UTC"
### Use MySQL database for queries
AMET_DB <- "T"
### Main Database Query String ###
query <- 
### Process ID number ###
pid<-
### Database Name ###
dbase<-
### Parameter Occurrence (PO) Code ###
POCode<-""
### Directory to write figures ###
figdir<-
### Species ###
species_in<-""
custom_species<-""
### Project ID Name 1 ###
run_name1<-""
### Additional Run Names (used for model-to-model comparisons) ###
run_name2<-
run_name3<-
run_name4<-
run_name5<-
run_name6<-
run_name7<-
### Array of Observation Network Flags ###
### Array of Observation Network Flags ###
#inc_networks<-
inc_all<-
inc_metar<-
inc_airnow<-
inc_asos<-
inc_maritime<-
inc_sao<-
inc_other_mtr<-
### Universal Plot Options ###
dates<-
custom_title<-''
png_from_html<-
png_res<-
x_label_angle<-0
### Plotly Options ###
img_height<-
img_width<-
### Flags for Time Averaging ###
averaging<-"n"
remove_negatives<-"y"
use_avg_stats<-"n"
aggregate_data<-"n"
aggregate_data_gc<-"n"
merge_statid_POC<-"n"
### Time Series Plot Options ###
inc_legend<-"y"
inc_points<-"y"
inc_bias<-
inc_rmse<-
inc_corr<-
inc_nmb<-
inc_nme<-
use_var_mean<-"n"
obs_per_day_limit<-0
avg_func<-
avg_func_name<-as.character(avg_func)
line_width<-
### Kelly Plot Options ###
inc_kelly_stats<-"n"
nmb_max<-NULL
nme_min<-NULL
nme_max<-NULL
mb_max<-NULL
me_min<-NULL
me_max<-NULL
rmse_min<-NULL
rmse_max<-NULL
cor_min<-NULL
cor_max<-NULL
mb_int<-NULL
nmb_int<-NULL
nme_int<-NULL
cor_int<-NULL
### Unique color ranges for some plots ###
color_ranges<-"n"
### Monitoring Sites to Include ###
site<-"All"
### States to Include ###
state<-"All"
### Regional Planning Organizations to Include ###
rpo<-"None"
### Priciple Component Analysis (PCA) Region ###
pca<-"None"
### Climate Region ###
clim_reg <- "None"
### Binned Plot Options ###
pca_flag<-"n"
bin_by_mod<-"n"
inc_error<-"n"
### Landuse Category
loc_setting<-
### Flag to Include or Remove Zero Precipitation Observations ###
zeroprecip<-"n"
### Numerical Limit for Data Completeness as percentage (used when calulating site statistics or averages)###
coverage_limit<-75
all_valid<-
all_valid_amon<-
### Numerical Limit for Data Completeness as minimum number of required observations (used when calulating site statistics or averages)###
num_obs_limit<-
### Flag for Soccer and Bugle Plots Setting NMB/NME or FB/FE ###
soccerplot_opt<-
### Flag for PAVE Overlay; 1=hourly, 2=daily ###
overlay_opt<-
### Flags for Confidence Lines / Trend Line to Plot on Scatterplots ###
conf_line<-
trend_line<-
### Scatterplot x and y axes limits ###
x_axis_min<-NULL
x_axis_max<-NULL
y_axis_min<-NULL
y_axis_max<-NULL
bias_y_axis_min<-NULL
bias_y_axis_max<-NULL
density_zlim<-NULL
num_dens_bins<-NULL
max_limit<-75
### Boxplot Options ###
inc_whiskers<-'n'
inc_ranges<-"y"
inc_median_lines<-'y'
remove_mean<-"n"
overlap_boxes<-"n"
### File containing list of stations created dynamically by the user ###
stat_file<-
### Spatial Plot Options ###
near_zero_color<-
symbsizfac<-
plot_radius<-
outlier_radius<-
fill_opacity<-
num_ints<-
perc_error_max<-
abs_error_max<-
rmse_range_max<-
perc_range_min<-
perc_range_max<-
abs_range_min<-
abs_range_max<-
diff_range_min<-
diff_range_max<-
greyscale <- 'n'
inc_counties <- 'y'
hist_max <- NULL
map_type <-
quantile_min<-
quantile_max<-
### Stacked Bar Charts Options ###
inc_FRM_adj<-"y"
use_median<-"y"
### Array of flags for which statistics to include on scatter plots ###
stats_flags<-
### Flag to include run info text on plots ###
run_info_text<-
### Set Scatter Plot Symbols and Colors ###
plot_colors<-
plot_colors2<-
plot_symbols<-
plot_chars<-
### Start and End Year/Month ###
year_start<-
year_end<-
month_start<-
month_end<-
day_start<-
day_end<-
start_date <- as.integer(paste(year_start,sprintf("%02d",month_start),sprintf("%02d",day_start),sep=""))
end_date   <- as.integer(paste(year_end,sprintf("%02d",month_end),sprintf("%02d",day_end),sep=""))

##############################
##### Setup Networks Arrays ###
###############################
network_names <- NULL
network_label <- NULL
if (inc_all == "y") {
   network_names <- c(network_names,"All")
   network_label <- c(network_label,"All")
}
if (inc_metar == "y") {
   network_names <- c(network_names,"METAR")
   network_label <- c(network_label,"METAR")
}
if (inc_airnow == "y") {
   network_names <- c(network_names,"AIRNOW")
   network_label <- c(network_label,"AIRNOW")
}
if (inc_asos == "y") {
   network_names <- c(network_names,"ASOS")
   network_label <- c(network_label,"ASOS")
}
if (inc_maritime == "y") {
   network_names <- c(network_names,"Maritime")
   network_label <- c(network_label,"Maritime")
}
if (inc_sao == "y") {
   network_names <- c(network_names,"SAO")
   network_label <- c(network_label,"SAO")
}
if (inc_other_mtr == "y") {
   network_names <- c(network_names,"OTHER-MTR")
   network_label <- c(network_label,"OTHER-MTR")
}

{
   if (species_in == "T") {
      species <- "T"
      species_ob <- species
      met_query_string <- paste("d.T_ob,d.T_mod",sep="")
      units <- "K"
      units_convert <- 0
   }
   else if (species_in == "WVMR") {
      species <- "WVMR"
      species_ob <- species
      met_query_string <- paste("d.WVMR_ob*1000,d.Q_mod*1000")
      units <- "g/kg"
      units_convert <- 0
   }
   else if (species_in == "Wind_Speed") {
      species <- "Wind_Speed"
      species_ob <- "U"
      met_query_string <- paste("SQRT(POW(d.U_ob,2)+POW(d.V_ob,2)),SQRT(POW(d.U_mod,2)+POW(d.V_mod,2))",sep="")
      units <- "m/s"
      units_convert <- 0
   }
   else if (species_in == "PCP1H") {
      species <- "PCP1H"
      species_ob <- species
      met_query_string <- paste("d.PCP1H_ob,d.PCP1H_mod",sep="")
      units <- "mm"
      units_convert <- 0
   }
   else if (species_in == "SRAD") {
      species <- "SRAD"
      species_ob <- species
      met_query_string <- paste("d.SRAD_ob,d.SRAD_mod",sep="")
      units <- "watts/m2"
      units_convert <- 0
   }
   else if (species_in == "PSFC") {
      species <- "PSFC"
      species_ob <- species
      met_query_string <- paste("d.PSFC_ob,d.PSFC_mod",sep="")
      units <- "kPa"
      units_convert <- 0
   }
}

#species <- unlist(strsplit(species_in,","))
#species <- gsub("_ob","",species)
total_networks<-length(network_names)
network1 <- network_names[[1]]
ametptype <- "both"
